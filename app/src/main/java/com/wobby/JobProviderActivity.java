package com.wobby;

import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.location.Location;
import android.net.Uri;
import android.os.Bundle;
import android.provider.MediaStore;
import android.support.design.widget.FloatingActionButton;
import android.support.design.widget.Snackbar;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentTransaction;
import android.util.Base64;
import android.util.Log;
import android.view.View;
import android.support.design.widget.NavigationView;
import android.support.v4.view.GravityCompat;
import android.support.v4.widget.DrawerLayout;
import android.support.v7.app.ActionBarDrawerToggle;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import com.facebook.CallbackManager;
import com.facebook.FacebookSdk;
import com.facebook.share.model.ShareLinkContent;
import com.facebook.share.widget.ShareDialog;

import java.io.ByteArrayOutputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;

public class JobProviderActivity extends AppCompatActivity
        implements NavigationView.OnNavigationItemSelectedListener {

    int RESULT_LOAD_IMG = 1;

    private ImageButton providerImage;
    private boolean isJobProvider = false, isJobSeeker = false;
    private Intent startIntent;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_job_provider);
        startIntent = getIntent();
        NavigationView navigationView = (NavigationView) findViewById(R.id.nav_view);
        navigationView.setNavigationItemSelectedListener(this);
        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        View headerView = navigationView.getHeaderView(0);
        providerImage = headerView.findViewById(R.id.JobProviderImage);
        TextView providerName = headerView.findViewById(R.id.JobProviderName);
        TextView providerMail = headerView.findViewById(R.id.JobProviderMail);
        providerName.setText(startIntent.getStringExtra("USER_FIRST_NAME") + " " + startIntent.getStringExtra("USER_LAST_NAME"));
        providerMail.setText(startIntent.getStringExtra("USERNAME"));
        isJobProvider = startIntent.getBooleanExtra("ISJOBPROVIDER", false);
        isJobSeeker = startIntent.getBooleanExtra("ISJOBSEEKER", false);
        //String providerImage64 = startIntent.getStringExtra("PROVIDERIMAGE");
        String providerImage64 = "";
        if(providerImage64 == null){
            startImageActivity();
        }else{
            byte[] providerImageDecoded = Base64.decode(providerImage64, Base64.DEFAULT);
            Bitmap decodedByte = BitmapFactory.decodeByteArray(providerImageDecoded, 0, providerImageDecoded.length);
            providerImage.setImageBitmap(decodedByte);
        }

        if(isJobProvider){
            try{
                navigationView.getMenu().findItem(R.id.job_new).setVisible(true);
                navigationView.getMenu().findItem(R.id.job_view).setVisible(true);
                navigationView.getMenu().findItem(R.id.job_update).setVisible(true);
                navigationView.getMenu().findItem(R.id.job_delete).setVisible(true);
            }
            catch (Exception e){
                Log.wtf("ERROR", e.toString());
            }
        }
        if(isJobSeeker){
            try{
                navigationView.getMenu().findItem(R.id.job_seeker_near).setVisible(true);
                navigationView.getMenu().findItem(R.id.job_seeker_map).setVisible(true);
            }
            catch (Exception e){
                Log.wtf("ERROR", e.toString());
            }
        }

        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);
        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
                this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
        drawer.addDrawerListener(toggle);
        toggle.syncState();




        FragmentManager manager = getSupportFragmentManager();
        FragmentTransaction transaction = manager.beginTransaction();
        JobViewFragment jobViewFragment = new JobViewFragment();
        transaction.add(R.id.container, jobViewFragment, "jobViewFragment");
        transaction.commit();


        providerImage.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                startImageActivity();
            }
        });
    }

    public void startImageActivity(){
        new AlertDialog.Builder(this)
                .setTitle("Choose a picture or take a new one")
                //.setMessage("Are you sure you want to share this job on Facebook?")
                .setIcon(android.R.drawable.ic_menu_camera)
                .setPositiveButton("Open Gallery", new DialogInterface.OnClickListener() {
                    public void onClick(DialogInterface dialog, int whichButton) {
                        Intent photoPickerIntent = new Intent(Intent.ACTION_PICK);
                        photoPickerIntent.setType("image/*");
                        startActivityForResult(photoPickerIntent, RESULT_LOAD_IMG);
                    }
                })
                .setNegativeButton("Open Camera", new DialogInterface.OnClickListener(){
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        Intent takePicture = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
                        startActivityForResult(takePicture, 0);
                    }
                }).show();

    }

    @Override
    public void onBackPressed() {
        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
        if (drawer.isDrawerOpen(GravityCompat.START)) {
            drawer.closeDrawer(GravityCompat.START);
        } else {
            super.onBackPressed();
        }
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.job, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }

    @SuppressWarnings("StatementWithEmptyBody")
    @Override
    public boolean onNavigationItemSelected(MenuItem item) {
        // Handle navigation view item clicks here.
        int id = item.getItemId();

        if (id == R.id.job_view) {
            FragmentManager manager = getSupportFragmentManager();
            FragmentTransaction transaction = manager.beginTransaction();
            Fragment f = manager.findFragmentByTag("jobEditFragment");
            Fragment f2 = manager.findFragmentByTag("jobViewFragment");
            Fragment f3 = manager.findFragmentByTag("jobDeleteFragment");
            if(f != null){
                transaction.remove(f);
            }
            if(f2 != null){
                transaction.remove(f2);
            }
            if(f3 != null){
                transaction.remove(f3);
            }
            JobViewFragment jobViewFragment = new JobViewFragment();
            transaction.add(R.id.container, jobViewFragment, "jobViewFragment");
            transaction.commit();
        }
        else if (id == R.id.job_new) {
            Intent intent = new Intent(getApplicationContext(), JobCreateActivity.class);
            startActivity(intent);
        }
        else if (id == R.id.job_update) {
            FragmentManager manager = getSupportFragmentManager();
            FragmentTransaction transaction = manager.beginTransaction();
            Fragment f = manager.findFragmentByTag("jobEditFragment");
            Fragment f2 = manager.findFragmentByTag("jobViewFragment");
            Fragment f3 = manager.findFragmentByTag("jobDeleteFragment");
            if(f != null){
                transaction.remove(f);
            }
            if(f2 != null){
                transaction.remove(f2);
            }
            if(f3 != null){
                transaction.remove(f3);
            }
            JobEditFragment jobEditFragment = new JobEditFragment();
            transaction.add(R.id.container, jobEditFragment, "jobEditFragment");
            transaction.commit();
        }
        else if (id == R.id.job_delete) {
            FragmentManager manager = getSupportFragmentManager();
            FragmentTransaction transaction = manager.beginTransaction();
            Fragment f = manager.findFragmentByTag("jobEditFragment");
            Fragment f2 = manager.findFragmentByTag("jobViewFragment");
            Fragment f3 = manager.findFragmentByTag("jobDeleteFragment");
            if(f != null){
                transaction.remove(f);
            }
            if(f2 != null){
                transaction.remove(f2);
            }
            if(f3 != null){
                transaction.remove(f3);
            }
            JobDeleteFragment jobDeleteFragment = new JobDeleteFragment();
            transaction.add(R.id.container, jobDeleteFragment, "jobDeleteFragment");
            transaction.commit();
        }
        else if (id == R.id.job_seeker_near) {
            FragmentManager manager = getSupportFragmentManager();
            FragmentTransaction transaction = manager.beginTransaction();
            Fragment f = manager.findFragmentByTag("jobEditFragment");
            Fragment f2 = manager.findFragmentByTag("jobViewFragment");
            Fragment f3 = manager.findFragmentByTag("jobDeleteFragment");
            if(f != null){
                transaction.remove(f);
            }
            if(f2 != null){
                transaction.remove(f2);
            }
            if(f3 != null){
                transaction.remove(f3);
            }
            JobSeekerViewFragment jobSeekerViewFragment = new JobSeekerViewFragment();
            transaction.add(R.id.container, jobSeekerViewFragment, "jobViewFragment");
            transaction.commit();
        }
        else if (id == R.id.job_seeker_map) {
            Intent intent = new Intent(getApplicationContext(), MapsActivity.class);
            intent.putExtra("MODE", "JOB_SEEKER");
            startActivity(intent);
        }
        else if (id == R.id.job_share) {

        }

        DrawerLayout drawer = findViewById(R.id.drawer_layout);
        drawer.closeDrawer(GravityCompat.START);
        return true;
    }

    protected void onActivityResult(int reqCode, int resultCode, Intent data) {
        super.onActivityResult(reqCode, resultCode, data);
        if (reqCode == RESULT_LOAD_IMG) {
            if (resultCode == RESULT_OK) {
                try {
                    final Uri imageUri = data.getData();
                    final InputStream imageStream = getContentResolver().openInputStream(imageUri);
                    final Bitmap selectedImage = BitmapFactory.decodeStream(imageStream);
                    providerImage.setImageBitmap(selectedImage);
                } catch (FileNotFoundException e) {
                    e.printStackTrace();
                    Toast.makeText(getApplicationContext(), "Something went wrong", Toast.LENGTH_LONG).show();
                }

            } else {
                Toast.makeText(getApplicationContext(), "You haven't picked Image", Toast.LENGTH_LONG).show();
            }
        }
        else{
            Bitmap picture = (Bitmap) data.getExtras().get("data");
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            picture.compress(Bitmap.CompressFormat.JPEG, 100, baos); //bm is the bitmap object
            byte[] b = baos.toByteArray();
            //updateImage(Base64.encodeToString(b, Base64.DEFAULT));
            Log.wtf("IMAGEN", Base64.encodeToString(b, Base64.DEFAULT));
            providerImage.setImageBitmap(picture);
        }
    }
}
